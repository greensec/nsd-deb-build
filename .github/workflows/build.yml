name: Build repository release

permissions:
  contents: read

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      nsd_tag:
        description: "Version Tag"
        default: "NSD_4_12_0_REL"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os-version:
          [
            "debian:buster",
            "debian:bullseye",
            "debian:bookworm",
            "ubuntu:noble",
            "ubuntu:jammy",
          ]
        arch: ["amd64", "arm64"]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: NLnetLabs/nsd
          ref: refs/tags/${{ github.event.inputs.nsd_tag || env.nsd_tag }}
          submodules: "recursive"

      - uses: actions/checkout@v4
        with:
          path: build-debian

      - name: Extract OS Flavor and Version
        id: extract-os
        run: |
          os_version="${{ matrix.os-version }}"
          nsd_version=$(echo ${{ github.event.inputs.nsd_tag || env.nsd_tag }} | sed -E 's/^NSD_([0-9]+)_([0-9]+)_([0-9]+)_REL/\1.\2.\3/')
          echo "flavor=${os_version%%:*}" >> $GITHUB_ENV
          echo "debian_release=${os_version##*:}" >> $GITHUB_ENV
          echo "nsd_version=$nsd_version" >> $GITHUB_ENV

      - uses: jtdor/build-deb-action@v1
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          docker-image: "${{ matrix.os-version }}"
          host-arch: "${{ matrix.arch }}"
          setup-hook: |
            export DEBIAN_FRONTEND=noninteractive
            os_version="${{ matrix.os-version }}"
            flavor=${os_version%%:*}
            arch="${{ matrix.arch }}"
            if [ "$flavor" = "ubuntu" ] && [ "$arch" = "arm64" ]; then
              # check for deb822 source format
              if [ -f /etc/apt/sources.list.d/ubuntu.sources ]; then
                cp /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's,[a-z]*.ubuntu.com,ports.ubuntu.com,' /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's,/ubuntu/$,/ubuntu-ports/,' /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's/^Components:/Architectures: arm64\nComponents:/' /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's/^Components:/Architectures: amd64\nComponents:/' /etc/apt/sources.list.d/ubuntu.sources
              else
                cp /etc/apt/sources.list /etc/apt/sources.list.d/ubuntu-arm.list
                sed -i 's/^deb /deb [arch=amd64] /' /etc/apt/sources.list
                sed -i 's,[a-z]*.ubuntu.com,ports.ubuntu.com,' /etc/apt/sources.list.d/ubuntu-arm.list
                sed -i 's,/ubuntu/ ,/ubuntu-ports/ ,' /etc/apt/sources.list.d/ubuntu-arm.list
                sed -i 's/^deb /deb [arch=arm64] /' /etc/apt/sources.list.d/ubuntu-arm.list
                cat /etc/apt/sources.list  /etc/apt/sources.list.d/ubuntu-arm.list
              fi
            fi
            if [ "$os_version" = "debian:buster" ]; then
              # override default sources
              echo "deb http://archive.debian.org/debian buster main contrib non-free" > /etc/apt/sources.list
              echo "deb http://archive.debian.org/debian-security buster/updates main contrib non-free" >> /etc/apt/sources.list
              echo "deb http://archive.debian.org/debian buster-backports main contrib non-free" >> /etc/apt/sources.list

              # Add Buster backports for newer debhelper
              echo "deb http://archive.debian.org/debian buster-backports main" > /etc/apt/sources.list.d/buster-backports.list
              apt-get -q update
              # Install debuilder first to avoid dependency issues
              apt-get install -y --no-install-recommends debhelper
              # Install debhelper from backports
              apt-get install -y --no-install-recommends -t buster-backports debhelper
              # Install other build deps
              apt-get install -y --no-install-recommends wget ca-certificates
              # Update autoconf for buster
              wget -q -O /tmp/autoconf_2.71-3_all.deb http://ftp.us.debian.org/debian/pool/main/a/autoconf/autoconf_2.71-3_all.deb
              dpkg --force-depends -i /tmp/autoconf_2.71-3_all.deb
              apt-get -f install -y

            elif [ "$os_version" = "debian:bullseye" ]; then
              # update autoconf for bullseye
              apt-get -q update
              apt-get install -y --no-install-recommends wget ca-certificates
              wget -q -O /tmp/autoconf_2.71-3_all.deb http://ftp.us.debian.org/debian/pool/main/a/autoconf/autoconf_2.71-3_all.deb
              dpkg --force-depends -i /tmp/autoconf_2.71-3_all.deb
              apt-get -f install -y
            fi

            cp -vr /github/workspace/build-debian/debian /github/workspace/
          extra-build-deps: "devscripts git dpkg-cross"
          before-build-hook: "DEBEMAIL='GitHub Actions <github-actions@users.noreply.github.com>' dch -b -v ${{ env.nsd_version }}~${{ env.debian_release }} 'GitHub build for ${{ matrix.os-version }}'"
          buildpackage-opts: --build=binary --no-sign -d
      - name: Upload deb files
        uses: actions/upload-artifact@v4
        with:
          name: "packages-${{ env.debian_release }}-${{ matrix.arch }}"
          path: ./debian/artifacts/*

  merge-artefacts:
    name: Merge all deb files to single artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: debian-packages
        uses: actions/upload-artifact/merge@v4

  add_release:
    name: Add package to release
    needs: merge-artefacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: merged-artifacts
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./*.deb

  add_repo:
    name: Add packages to public debian repository
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: merge-artefacts
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: "merged-artifacts"
      - name: Add releases to repo
        uses: smeinecke/apt-repo-action@master
        with:
          github_token: ${{ github.token }}
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            buster
            bullseye
            bookworm
            noble
            jammy
          file: |
            *.deb
          version_by_filename: true
          private_key: ${{ secrets.APT_SIGNING_KEY }}
          public_key: ${{ vars.APT_PUBLIC_KEY }}
          key_passphrase: ""
          skip_duplicates: true
